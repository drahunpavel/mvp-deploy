services:
  auth-api:
    build:
      context: ./backend
      dockerfile: auth-api/Dockerfile
    env_file:
      - ./backend/auth-api/.env
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - app-network
    restart: unless-stopped
  
  ui-api:
    build:
      context: ./backend
      dockerfile: ui-api/Dockerfile
    env_file:
      - ./backend/ui-api/.env
    depends_on:
      - db
    ports:
      - "8001:8001"
    networks:
      - app-network
    restart: unless-stopped
  
  db: 
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "5433:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "80:80"
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:


networks:
  app-network:
    name: mvp-deploy-network